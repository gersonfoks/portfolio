import{P as t}from"./PageHeading-991fa66e.js";import{_ as i,r as o,o as a,c as s,a as n,F as r,b as c}from"./index-37166e19.js";const l={components:{PageHeading:t}},d="/portfolio/projects/AiAgainstToxicClouds/roi_example.png",h="/portfolio/projects/AiAgainstToxicClouds/kooksfabriek_1.png",m="/portfolio/projects/AiAgainstToxicClouds/kooksfabriek_2.png",u="/portfolio/projects/AiAgainstToxicClouds/hoogoven.png",f="/portfolio/projects/AiAgainstToxicClouds/vit_architecture.jpg",g="/portfolio/projects/AiAgainstToxicClouds/cloudy_example.png";const p=c('<div class="container"><div class="columns is-centered"><div class="column is-half-desktop is-two-thirds-mobile is-half-desktop content"><section class="section"><h1 class="title is-4"> Introduction </h1><p> The Tata Steel factory regurlarly emits illegal toxic substances into the air. In this challenge we build a model that is able to detect those toxic clouds from video footage that monitor the Tata Steel Factory. To detect toxic clouds we zoomed in on regions of interest in the video where it was most likely that toxic smoke was emitted. To classify the videos in containing toxic smoke and not containing toxic smoke multiple instance learning was used. On the test data from the live stream we where able to achieve a recall of around 95% but only a precision of 46%. This indicates that the model did not generalize well to do inference on the live stream as there was a shift in distribution which lead to a lot of false positives. Currently, the model is being to deployed and new data directly from the live stream is being gathered to improve the model. </p></section><section class="section"><h1 class="title is-4">Context</h1><p> Tata Steel regurlarly emits illegal toxic substances into the air, notably from its two outdated coke ovens. These aging facilities often leak harmful black clouds containing carcinogenic PAHs (polycyclic aromatic hydrocarbons) during the processing of raw cokeâ€”a practice prohibited by Dutch law. Consequently, the vicinity of the Tata Steel plant experiences a distressingly elevated rate of lung cancer compared to other regions in the Netherlands. For the emission of toxic clouds, Tata Steel has been fined multiple times by the Dutch Government. But they continue to emit toxic clouds. However when they receive 15 fines in total they will be forced to close the factory. To monitor the emissions of toxic clouds, Frisse Wind and Greenpeace has installed multiple cameras that monitor the factory. Currently the footage is being monitored by several volunteers and being placed on youtube. However this is a time consuming activity and it is not possible to monitor the footage 24/7. Furthermore it is likely that some toxic clouds emisions are also missed. Therefore we want to automatically detect toxic clouds from the footage. </p><figure><img src="'+d+'"><figcaption>An example of the camera together with the regions of interest taken from: <a href="https://ijmondcam.multix.io/">ijmondcam</a></figcaption></figure></section><section class="section"><h1 class="title is-4">Data and Preparation</h1><p> The data itself constists of 690 videos of each containting a few minutes of footage but speed up to play in about 2 seconds at 36 fps. There are 308 videos that contain toxic clouds and 382 videos that do not contain toxic clouds. The labels where gathered by volunteers using the following website: <a href="https://ijmondcam.multix.io/">ijmondcam</a> The footage is taken from 3 different cameras monitoring 3 different sites: kooksfabriek 1, kooksfabriek 2 and hoogoven. The video clips where taken between 04-05-2022 and 09-08-2023. The data was split into a train and validation set. To test the model data was gathered from the first 10 days of October 2023 and labeled by me. This data contained 312 videos of which only 42 contains toxic clouds. </p><div><h5 class="has-text-centered">Example of toxic clouds</h5><div class="columns is-centered pt-5"><div class="column pr-0 pl-0"><figure class="image is-256x256 m-0"><img src="'+h+'"></figure></div><div class="column pr-0 pl-0"><figure class="image is-256x256 m-0"><img src="'+m+'"></figure></div><div class="column pr-0 pl-0"><figure class="image is-256x256 m-0"><img src="'+u+'"></figure></div></div></div><h2 class="title is-5">Approach</h2><p> To detect toxic clouds in the clips we used multiple instance learning (See <a href="https://nilg.ai/202105/an-introduction-to-multiple-instance-learning/">here</a> for a nice introduction). In short we have a clip in which 1 or more frames contain toxic smoke. We do not know which frames contain toxic smoke. The task of the model is to classify the clip as containing toxic smoke or not containing toxic smoke. To do this we finetune a Vision transformer from Huggingface (VIT) on the clips. We tried out different models from <a href="https://huggingface.co/timm?search_models">timm</a>. For each frame we get a prediction, we then take the maximum prediction of all the frames and use this as the prediction for the clip. This way we can later on use this model to do inference on the live stream on individual frames as the model is able to classify each frame individually. A small hyperparameter search was done to find the best model and hyperparameters. Furthermore we also tried some data augmentations techniques such as auto-contrast and random flipping to get a more robust model. </p><figure><img src="'+f+'"><figcaption>An overview of the vit model. Taken from: <a href="https://arxiv.org/abs/2010.11929">Original Paper</a></figcaption></figure></section><section class="section"><h1 class="title is-4">Results</h1><p> To interpret the results we created a dummy classifier that labels every video as positive. We get the following results: <table><thead><tr><th>Metrics</th><th>Best VIT Model score</th><th>Dummy Classifier Score</th></tr></thead><tbody><tr><td>Accuracy</td><td>0.846</td><td>0.135</td></tr><tr><td>Precision</td><td>0.465</td><td>0.135</td></tr><tr><td>Recall</td><td>0.952</td><td>1.000</td></tr><tr><td>F1</td><td>0.625</td><td>0.237</td></tr><tr><td>Balanced Accuracy</td><td>0.891</td><td>0.500</td></tr></tbody></table> As you can see the accuracy and recall of the score is quite high. However the precision is quite low. This translates into a lot of false positives. This is not surprising as we get a distribution shift from the training data to the test data. In the training data about 50% is positive. But in the test data only 13% is positive. Furthermore the test data contains instances of bad weather (see below) which was not present in the training data. But nonetheless these results are encouring as we are able to find about 95% of the toxic clouds. Further training could bring down the false positive rate. </p><div class="has-text-centered"><figure class="image is-256x256 mr-auto ml-auto"><img src="'+g+'"><figcaption>Example of cloudy weather</figcaption></figure></div></section><section class="section"><h1 class="title is-4">Conclusion</h1><p> During this challenge we where able to create a model that is able to detect toxic clouds from video footage. The model is able to achieve a high recall. Unfortunately the model did not generalize well to the live stream. This is likely due to a shift in distribution between the training data and the live stream. Currently, some work is done to gather new data from the live stream, and integrate everything into one nice pipeline. This way we can aid the volunteers with their work, while continoulsy improving the model and the data. </p></section><section class="section"><h1 class="title is-4">Credits</h1><p> I want to thank Greenpeace, Frisse Wind and Fruitpunch AI for organizing this challenge. Furthmore I want to thank Yen Chia for provinding the data. And ofcourse I want to give credit to all the volunteers that worked on labeling the data and on other aspects of the challenge such as setting up a data pipeline. </p></section></div></div></div>',1);function v(w,y,b,x,k,T){const e=o("PageHeading");return a(),s(r,null,[n(e,{title:"Ai Against Toxic Clouds"}),p],64)}const C=i(l,[["render",v]]);export{C as default};
